<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="edc-server" class="inhealth.edcgw.transport.nio.NioServer"
          init-method="start" destroy-method="stop"
          
          p:pipelineFactory-ref="edc-pipelineFactory"
          p:bindAddr="0.0.0.0"
          p:bindPort="9876"
          p:executor-ref="edc-executor" />

    <bean id="edc-executor" class="java.util.concurrent.Executors" factory-method="newFixedThreadPool">
        <constructor-arg index="0" value="250" />
    </bean>

    <bean id="edc-threadPoolExecutor" class="org.jboss.netty.handler.execution.OrderedMemoryAwareThreadPoolExecutor">
        <constructor-arg index="0" value="250" />
        <constructor-arg index="1" value="0" />
        <constructor-arg index="2" value="0" />
    </bean>

    <bean id="edc-pipelineFactory" class="inhealth.edcgw.transport.nio.DefaultChannelPipelineFactory">
	    <property name="handlers">
	        <util:map map-class="java.util.LinkedHashMap" key-type="java.lang.String" value-type="java.lang.Object">
	            <!-- -->
	            <entry key="trafficLogger" value-ref="edc-trafficLogger" />
	            <!-- -->
	            <entry key="lengthFrameCodec" value="edc-lengthFrameCodec" />
	            <entry key="tpduCodec" value="edc-tpduCodec" />
	            <entry key="iso8583Codec" value-ref="edc-iso8583Codec" />
	            <entry key="signOnAutoRespond" value-ref="edc-signOnAutoRespond" />
	            <entry key="echoAutoRespond" value-ref="edc-echoAutoRespond" />
	            <entry key="threadPoolExecutor" value-ref="edc-threadPoolExecutor" />
	            <entry key="partnerLink" value-ref="edc-partnerLink" />
	        </util:map>
	    </property>
    </bean>
    
    <bean id="edc-trafficLogger" class="inhealth.edcgw.transport.nio.handler.TrafficLogger"
          p:trafficLoggerDao-ref="trafficLoggerDao" />

    <bean id="edc-lengthFrameCodec" class="inhealth.edcgw.transport.nio.codec.NboLengthFrameCodec"
          p:length="2"
          scope="prototype" lazy-init="true" />

    <bean id="edc-tpduCodec" class="inhealth.edcgw.transport.nio.codec.TpduCodec"
          scope="prototype" lazy-init="true" />

    <bean id="edc-iso8583Codec" class="inhealth.edcgw.transport.nio.codec.Iso8583Codec"
          p:messageConverter-ref="edc-iso8583MessageConverter" />

    <bean id="edc-signOnAutoRespond" class="inhealth.edcgw.transport.nio.handler.Iso8583SignOnAutoRespond" />

    <bean id="edc-echoAutoRespond" class="inhealth.edcgw.transport.nio.handler.Iso8583EchoAutoRespond" />

    <bean id="edc-partnerLink" class="inhealth.edcgw.transport.nio.handler.Iso8583PartnerLink"
          p:sharable="false" />

    <bean id="edc-iso8583MessageConverter" class="inhealth.edcgw.protocol.iso8583.JPosMessageConverter">
        <property name="packager">
            <!--
            <bean class="org.jpos.iso.packager.GenericPackager">
                <constructor-arg index="0">
                    <bean  class="inhealth.edcgw.util.ClassUtils" factory-method="getResourceAsStream">
                        <constructor-arg index="0" value="jpos-edc-terminal.xml" />
                    </bean>
                </constructor-arg>
            </bean>
            -->
            <bean class="org.jpos.iso.packager.ISO87BPackager" />
        </property>
    </bean>
</beans>

